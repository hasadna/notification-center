// Generated by IcedCoffeeScript 1.6.2c
(function() {
  var HN;



  HN = (function() {
    function HN() {}

    HN.prototype.subscribe = function(url, tags, latlon, radius, period, success_cb, login_cb) {
      var apiurl, data, handler, invocation;
      apiurl = 'http://hasadna-notifications.appspot.com/api/subscribe';
      data = {
        url: url,
        tags: tags,
        period: parseInt(period),
        latlon: latlon,
        radius: (radius != null) && radius !== "" ? parseInt(radius) : null
      };
      data = JSON.stringify(data);
      invocation = new XMLHttpRequest();
      handler = function() {
        var key, response;
        if (invocation.readyState !== 4) {
          return;
        }
        response = invocation.response;
        if (response.success) {
          key = response.id;
          return success_cb(key);
        } else {
          url = response.login;
          return login_cb(url);
        }
      };
      if (invocation) {
        invocation.open('POST', apiurl, true);
        invocation.setRequestHeader('Content-Type', 'application/json');
        invocation.responseType = 'json';
        invocation.onreadystatechange = handler;
        invocation.withCredentials = true;
        return invocation.send(data);
      }
    };

    HN.prototype.unsubscribe = function(key, success_cb, login_cb) {
      var apiurl, data, handler, invocation;
      apiurl = 'http://hasadna-notifications.appspot.com/api/unsubscribe';
      data = {
        subscription_id: key
      };
      data = JSON.stringify(data);
      invocation = new XMLHttpRequest();
      handler = function() {
        var response, url;
        if (invocation.readyState !== 4) {
          return;
        }
        response = invocation.response;
        if (response.success) {
          return success_cb();
        } else {
          url = response.login;
          return login_cb(url);
        }
      };
      if (invocation) {
        invocation.open('POST', apiurl, true);
        invocation.setRequestHeader('Content-Type', 'application/json');
        invocation.responseType = 'json';
        invocation.onreadystatechange = handler;
        invocation.withCredentials = true;
        return invocation.send(data);
      }
    };

    HN.prototype.issubscribed = function(url, tags, latlon, success_cb, login_cb) {
      var apiurl, data, handler, invocation;
      apiurl = 'http://hasadna-notifications.appspot.com/api/issubscribed';
      data = {
        url: url,
        tags: tags,
        latlon: latlon
      };
      data = JSON.stringify(data);
      invocation = new XMLHttpRequest();
      handler = function() {
        var response;
        if (invocation.readyState !== 4) {
          return;
        }
        response = invocation.response;
        if (response.login != null) {
          url = response.login;
          return login_cb(url);
        } else {
          return success_cb(response.success, response.id);
        }
      };
      if (invocation) {
        invocation.open('POST', apiurl, true);
        invocation.setRequestHeader('Content-Type', 'application/json');
        invocation.responseType = 'json';
        invocation.onreadystatechange = handler;
        invocation.withCredentials = true;
        return invocation.send(data);
      }
    };

    return HN;

  })();

  window.hn = new HN();

}).call(this);
